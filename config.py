import configparser
import os

def validate(option, section, key):
    if option == '--INVALID--':
        raise configparser.Error('Found default invalid option in \'{}\' key in \'{}\' section!'.format(key, section))

    return option

APP_DIR = os.path.dirname(os.path.realpath(__file__))

config_file = os.path.join(APP_DIR, 'automation.conf')

config = configparser.ConfigParser()
if os.path.isfile(config_file) is False:
    raise OSError('Missing file: \'{0}\'! Please copy \'{1}\' to \'{0}\' and edit necessary values.'.format(config_file, os.path.join(APP_DIR, 'defaults.conf')))

config.read(config_file)

SECRET_KEY = validate(config.get('Flask Setup', 'Secret Key'), 'Flask Setup', 'Secret Key')

ESXI = {}
ESXI['host'] = validate(config.get('ESXI Credentials', 'Host'), 'ESXI Credentials', 'Host')
ESXI['user'] = validate(config.get('ESXI Credentials', 'User'), 'ESXI Credentials', 'User')
ESXI['password'] = validate(config.get('ESXI Credentials', 'Password'), 'ESXI Credentials', 'Password')

GUEST = {}
GUEST['user'] = validate(config.get('Guest Credentials', 'User'), 'Guest Credentials', 'User')
GUEST['password'] = validate(config.get('Guest Credentials', 'Password'), 'Guest Credentials', 'Password')

DEFAULT_VMS = list(config['Default VMs'].keys())

RESEARCH_VMS = list(config['Research VMs'].keys())
