from flask import Blueprint, request, abort, url_for, jsonify, session, g, redirect
from vmware_automate import ESXI_Host, ESXI_Guest
from config import ESXI, GUEST, DEFAULT_VMS, RESEARCH_VMS

vm = Blueprint('vm', __name__, url_prefix='/vm')

vmware = {'esxi': ESXI, 'default_vms': DEFAULT_VMS, 'research_vms': RESEARCH_VMS, 'guest': GUEST}
host = ESXI_Host(vmware['esxi']['host'], vmware['esxi']['user'], vmware['esxi']['password'], guests=vmware['default_vms'])
vmware['esxi'] = {'host': host}

guests = [] 
for guest in vmware['default_vms']:
    print(guest)
    guests.append(ESXI_Guest(host, guest, vmware['guest']['user'], vmware['guest']['password']))

vmware['esxi']['guests'] = guests

#### VMWARE ESXI API INTERFACE ####

@vm.route('/', methods=['GET'])
def vm_main():
    global vmware
    host = vmware['esxi']['host']
    guests = vmware['esxi']['guests']

    return jsonify({'guests': list(map(lambda x: str(x), guests)), 'host': str(host)})

@vm.route('/ls', methods=['GET'])
def vm_ls():
    global vmware
    return jsonify({'vms': vmware['esxi']['host'].lsVMs()})

@vm.route('/<vm_name>', methods=['GET'])
@vm.route('/<vm_name>/', methods=['GET'])
def vm_get(vm_name):
    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
    else:
        vm_name = None
    return jsonify({'vm': vm_name})

@vm.route('/<vm_name>/upload', methods=['POST'])
def vm_upload(vm_name):
    files = request.files
    if len(files) == 0:
        return jsonify({'vm': vm_name, 'error': 'no files found in uploaded data'})

    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
        for file in files:
            vm.upload(files[file].read(), filename=files[file].filename)
    else:
        vm_name = None
    return jsonify({'vm': vm_name})

@vm.route('/<vm_name>/snapshots', methods=['GET'])
def vm_snapshots(vm_name):
    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
        snapshots = vm.getSnapshots()
        snapshots = str(snapshots)
    else:
        snapshots = None
        vm_name = None
    return jsonify({'vm': vm_name, 'snapshots': snapshots})

@vm.route('/<vm_name>/snapshots/create', methods=['GET'])
def vm_snapshots_create(vm_name):
    args = request.args
    if args.get('name', None) is None:
        return jsonify({'vm': vm_name, 'error': 'missing required name argument'})
    else:
        name = args.get('name')

    memory = args.get('memory', False)
    memory = bool(memory)

    pause = args.get('pause', True)
    pause = bool(pause)

    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
        snapshot = vm.createSnapshot(name, memory=memory, pause=pause)
        snapshot = str(snapshot)
    else:
        snapshots = None
        vm_name = None
    return jsonify({'vm': vm_name, 'snapshot': snapshot})

@vm.route('/<vm_name>/power', methods=['GET'])
def vm_power_list(vm_name):
    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
        modes = vm.getPowerModes()
    else:
        modes = None
        vm_name = None
    return jsonify({'vm': vm_name, 'modes': modes})

@vm.route('/<vm_name>/power/<mode>', methods=['GET'])
def vm_power(vm_name, mode):
    global vmware
    guests = vmware['esxi']['guests']

    vm = list(filter(lambda x: x.guest == vm_name, guests))
    if len(vm) > 0:
        vm = vm.pop()
        status = vm.power(mode)
    else:
        status = None
        vm_name = None
    res = {'vm': vm_name}
    res.update(status)
    return jsonify(res)
